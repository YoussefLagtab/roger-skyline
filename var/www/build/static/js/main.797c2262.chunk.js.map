{"version":3,"sources":["gql.js","components/CreateContact.js","components/EditContact.js","components/DeleteContact.js","components/CopyContact.js","components/ShowContacts.js","App.js","serviceWorker.js","index.js"],"names":["CONTACTS_QUERY","gql","_templateObject","CREATE_CONTACT","_templateObject2","UPDATE_CONTACT","_templateObject3","REMOVE_CONTACT","_templateObject4","CreateContact","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","sumbit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","createContact","_this$state","firstname","lastname","phone","wrap","_context","prev","next","state","key","abrupt","variables","inputRef","current","focus","stop","_x","_x2","apply","arguments","React","createRef","_this2","_this$state2","react_default","createElement","react_apollo_esm","mutation","update","cache","_ref2","data","alert","contacts","readQuery","query","writeQuery","concat","setState","onKeyPress","noValidate","autoComplete","TextField","label","value","onChange","target","margin","required","Component","EditContact","editing","updateContact","_updateContact","id","props","contact","handleOpen","handleClose","_this$props$contact","_this$props$contact2","map","c","Fragment","IconButton","aria-label","onClick","Edit_default","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","Button","color","DeleteContact","_deleteContact","removeContact","window","confirm","name","filter","Delete_default","CopyContact","lib","text","onCopy","_copyContact","FileCopy_default","App","loading","error","style","CircularProgress","size","List","i","arr","ListItem","Avatar","backgroundColor","toUpperCase","ListItemText","primary","secondary","ListItemSecondaryAction","CopyContact_CopyContact","EditContact_EditContact","DeleteContact_DeleteContact","length","Divider","className","Paper","width","textAlign","padding","CreateContact_CreateContact","ShowContacts","Boolean","location","hostname","match","client","ApolloClient","uri","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.797c2262.chunk.js","sourcesContent":["import gql from 'graphql-tag'\n\nconst CONTACTS_QUERY = gql`\n\t{\n\t\tcontacts {\n\t\t\tid\n\t\t\tfirstname\n\t\t\tlastname\n\t\t\tphone\n\t\t\tcreatedAt\n\t\t\tlastModified\n\t\t}\n\t}\n`\nconst CREATE_CONTACT = gql`\n\tmutation CreateContact($firstname: String!, $lastname: String!, $phone: String!) {\n\t\tcreateContact(firstname: $firstname, lastname: $lastname, phone: $phone) {\n\t\t\tid\n\t\t\tfirstname\n\t\t\tlastname\n\t\t\tphone\n\t\t\tcreatedAt\n\t\t\tlastModified\n\t\t}\n\t}\n`\nconst UPDATE_CONTACT = gql`\n\tmutation UpdateContact($id: ID!, $firstname: String!, $lastname: String!, $phone: String!) {\n\t\tupdateContact(id: $id, firstname: $firstname, lastname: $lastname, phone: $phone) {\n\t\t\tid\n\t\t\tfirstname\n\t\t\tlastname\n\t\t\tphone\n\t\t\tcreatedAt\n\t\t\tlastModified\n\t\t}\n\t}\n`\nconst REMOVE_CONTACT = gql`\n\tmutation RemoveContact($id: ID!) {\n\t\tremoveContact(id: $id)\n\t}\n`\n\nexport { CONTACTS_QUERY, CREATE_CONTACT, UPDATE_CONTACT, REMOVE_CONTACT }\n","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\nimport TextField from '@material-ui/core/TextField'\n\nimport { CREATE_CONTACT, CONTACTS_QUERY } from '../gql'\n\nexport default class CreateContact extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tfirstname: '',\n\t\t\tlastname: '',\n\t\t\tphone: ''\n\t\t}\n\n\t\tthis.inputRef = React.createRef()\n\t}\n\tsumbit = async (e, createContact) => {\n\t\tlet { firstname, lastname, phone } = this.state\n\t\tif (e.key !== 'Enter' || firstname === '' || lastname === '' || phone === '') return\n\n\t\tawait createContact({\n\t\t\tvariables: {\n\t\t\t\tfirstname,\n\t\t\t\tlastname,\n\t\t\t\tphone\n\t\t\t}\n\t\t})\n\t\tthis.inputRef.current.focus()\n\t}\n\n\trender() {\n\t\tlet { firstname, lastname, phone } = this.state\n\t\treturn (\n\t\t\t<Mutation\n\t\t\t\tmutation={CREATE_CONTACT}\n\t\t\t\tupdate={(cache, { data: { createContact } }) => {\n\t\t\t\t\tif (!createContact) return alert('phone number already exists!')\n\t\t\t\t\tlet { contacts } = cache.readQuery({ query: CONTACTS_QUERY })\n\t\t\t\t\tif (!contacts) contacts = []\n\n\t\t\t\t\tcache.writeQuery({\n\t\t\t\t\t\tquery: CONTACTS_QUERY,\n\t\t\t\t\t\tdata: { contacts: contacts.concat([createContact]) }\n\t\t\t\t\t})\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tfirstname: '',\n\t\t\t\t\t\tlastname: '',\n\t\t\t\t\t\tphone: ''\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{createContact => (\n\t\t\t\t\t<form onKeyPress={e => this.sumbit(e, createContact)} noValidate autoComplete=\"off\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tinputRef={this.inputRef}\n\t\t\t\t\t\t\tlabel=\"FirstName\"\n\t\t\t\t\t\t\tvalue={firstname}\n\t\t\t\t\t\t\tonChange={e => this.setState({ firstname: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tlabel=\"Lastname\"\n\t\t\t\t\t\t\tvalue={lastname}\n\t\t\t\t\t\t\tonChange={e => this.setState({ lastname: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tlabel=\"Phone\"\n\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\tonChange={e => this.setState({ phone: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</Mutation>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\n\nimport { UPDATE_CONTACT, CONTACTS_QUERY } from '../gql'\n\nexport default class EditContact extends Component {\n\tstate = {\n\t\tediting: false,\n\t\tfirstname: '',\n\t\tlastname: '',\n\t\tphone: ''\n\t}\n\tcomponentWillMount() {\n\t\tlet { firstname, lastname, phone } = this.props.contact\n\t\tthis.setState({ firstname, lastname, phone })\n\t}\n\tsumbit = (e, updateContact) => {\n\t\tif (e.key === 'Enter') this._updateContact(updateContact)\n\t}\n\t_updateContact = updateContact => {\n\t\tlet { firstname, lastname, phone } = this.state\n\t\tlet { id } = this.props.contact\n\t\tif (!firstname || !lastname || !phone) return\n\t\tupdateContact({\n\t\t\tvariables: {\n\t\t\t\tid,\n\t\t\t\tfirstname,\n\t\t\t\tlastname,\n\t\t\t\tphone\n\t\t\t}\n\t\t})\n\t\tthis.setState({ editing: false })\n\t}\n\thandleOpen = () => {\n\t\tthis.setState({ editing: true })\n\t}\n\thandleClose = () => {\n\t\tlet { firstname, lastname, phone } = this.props.contact\n\t\tthis.setState({ editing: false, firstname, lastname, phone })\n\t}\n\trender() {\n\t\tlet { firstname, lastname, phone } = this.state\n\t\treturn (\n\t\t\t<Mutation\n\t\t\t\tmutation={UPDATE_CONTACT}\n\t\t\t\tupdate={(cache, { data: { updateContact } }) => {\n\t\t\t\t\tlet { contacts } = cache.readQuery({ query: CONTACTS_QUERY })\n\t\t\t\t\tcache.writeQuery({\n\t\t\t\t\t\tquery: CONTACTS_QUERY,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tcontacts: contacts.map(c => (c.id === updateContact.id ? updateContact : c))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{updateContact => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<IconButton aria-label=\"edit\" onClick={this.handleOpen}>\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\topen={this.state.editing}\n\t\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<DialogTitle id=\"form-dialog-title\">Edit</DialogTitle>\n\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t<form onKeyPress={e => {this.sumbit(e, updateContact)}} noValidate autoComplete=\"off\">\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tlabel=\"FirstName\"\n\t\t\t\t\t\t\t\t\t\tvalue={firstname}\n\t\t\t\t\t\t\t\t\t\tonChange={e => this.setState({ firstname: e.target.value })}\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tlabel=\"Lastname\"\n\t\t\t\t\t\t\t\t\t\tvalue={lastname}\n\t\t\t\t\t\t\t\t\t\tonChange={e => this.setState({ lastname: e.target.value })}\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tlabel=\"Phone\"\n\t\t\t\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\t\t\t\tonChange={e => this.setState({ phone: e.target.value })}\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button onClick={this.handleClose} color=\"secondary\">\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tthis._updateContact(updateContact)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Mutation>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo'\n\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport { REMOVE_CONTACT, CONTACTS_QUERY } from '../gql'\n\nexport default class DeleteContact extends Component {\n\t_deleteContact = removeContact => {\n\t\tlet c = window.confirm('delete contact: ' + this.props.name)\n\t\tif (!c) return\n\t\tremoveContact({ variables: { id: this.props.id } })\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<Mutation\n\t\t\t\tmutation={REMOVE_CONTACT}\n\t\t\t\tupdate={(cache, { data: { removeContact } }) => {\n\t\t\t\t\tlet { contacts } = cache.readQuery({ query: CONTACTS_QUERY })\n\t\t\t\t\tcache.writeQuery({\n\t\t\t\t\t\tquery: CONTACTS_QUERY,\n\t\t\t\t\t\tdata: { contacts: contacts.filter(c => c.id !== removeContact) }\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{(removeContact, { data }) => (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\taria-label=\"edit\"\n\t\t\t\t\t\tonClick={() => this._deleteContact(removeContact)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t</Mutation>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport CopyIcon from '@material-ui/icons/FileCopy'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nexport default class CopyContact extends Component {\n\trender() {\n\t\tlet { firstname, lastname, phone } = this.props.contact\n\t\treturn (\n\t\t\t<CopyToClipboard\n\t\t\t\ttext={`${firstname} ${lastname}: ${phone}`}\n\t\t\t\tonCopy={() => {\n\t\t\t\t\talert('contact copied!')\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<IconButton aria-label=\"edit\" onClick={this._copyContact}>\n\t\t\t\t\t<CopyIcon />\n\t\t\t\t</IconButton>\n\t\t\t</CopyToClipboard>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport { Query } from 'react-apollo'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Avatar from '@material-ui/core/Avatar'\nimport Divider from '@material-ui/core/Divider'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport EditContact from './EditContact'\nimport DeleteContact from './DeleteContact'\nimport CopyContact from './CopyContact'\n\nimport { CONTACTS_QUERY } from '../gql'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Query query={CONTACTS_QUERY}>\n\t\t\t\t{({ loading, error, data }) =>\n\t\t\t\t\terror ? (\n\t\t\t\t\t\t<p style={{ color: 'red' }}>Error!</p>\n\t\t\t\t\t) : loading ? (\n\t\t\t\t\t\t<CircularProgress size={50} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t{!data.contacts ? (\n\t\t\t\t\t\t\t\t<p style={{ color: '#353535' }}>no contacts!</p>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{data.contacts.map((c, i, arr) => (\n\t\t\t\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: '#269df3' }}\n\t\t\t\t\t\t\t\t\t\t\t\t>{`${c.firstname[0].toUpperCase()}${c.lastname[0].toUpperCase()}`}</Avatar>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\t\t\tprimary={`${c.firstname} ${c.lastname}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsecondary={c.phone}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CopyContact contact={c} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditContact contact={c} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteContact id={c.id} name={`${c.firstname} ${c.lastname}`} />\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t{i !== arr.length - 1 && <Divider />}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Query>\n\t\t)\n\t}\n}\n\nexport default App\n","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper'\n\nimport CreateContact from './components/CreateContact'\nimport ShowContacts from './components/ShowContacts'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Paper style={{ margin: '30px auto', width: 700, textAlign: 'center', padding: '20px' }}>\n\t\t\t\t\t<h1 style={{ color: '#757575' }}>Contacts list</h1>\n\t\t\t\t\t<CreateContact />\n\t\t\t\t\t<ShowContacts />\n\t\t\t\t</Paper>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from 'react-apollo'\n\nconst client = new ApolloClient({\n\turi: 'https://10.11.100.209/api'\n})\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n\t\t<App />\n\t</ApolloProvider>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}